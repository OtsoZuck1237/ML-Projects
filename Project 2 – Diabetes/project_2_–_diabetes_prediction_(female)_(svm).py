# -*- coding: utf-8 -*-
"""Project 2 â€“ Diabetes Prediction (female) (SVM).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/143t48s526rRk95NA07E6GcG4AJMZViS-

#Importing Libraries
"""

import numpy as np
import pandas as pd

"""#Importing our Data by using pandas"""

diabetes_dataset = pd.read_csv('/content/diabetes.csv')
X = diabetes_dataset.iloc[:, :-1].values
y = diabetes_dataset.iloc[:, -1].values

diabetes_dataset.head()

diabetes_dataset.shape

diabetes_dataset.describe()

diabetes_dataset['Outcome'].value_counts()

diabetes_dataset.groupby('Outcome').mean()

"""#Splitting the Dataset into the Training and Test set"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 2)

"""#Feature Scaling"""

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

print(X.shape, X_train.shape, X_test.shape)

"""#Training our SVM model"""

from sklearn.svm import SVC
classifier = SVC(kernel = 'linear', random_state = 0)
classifier.fit(X_train, y_train)

"""#Evaluation of our model by using Matrix Confusion"""

from sklearn.metrics import confusion_matrix, accuracy_score
y_pred = classifier.predict(X_test)
cm = confusion_matrix(y_test, y_pred)
print(cm)
accuracy_score(y_test, y_pred)

"""#Now let's make some predictions"""

input_data = (4,110,92,0,0,37.6,0.191,30)
input_data_as_numpy_array = np.asarray(input_data)
input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)
std_data = sc.transform(input_data_reshaped)
prediction = classifier.predict(std_data)
print(prediction)

if (prediction[0] == 0):
  print('The person is not diabetic')
else:
  print('The person is diabetic')